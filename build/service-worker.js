"use strict";var precacheConfig=[["/index.html","553e912d463564ceed9bbcf9b277e090"],["/static/css/main.d8640303.css","c39773f0de877109c5d3d8fa0d917af2"],["/static/js/main.f5ad0d5d.js","57481c49263cd3fc8285a56f76d84d77"],["/static/media/banner.bfd4a204.jpg","bfd4a204c2f24216fab8aaaed4f68a28"],["/static/media/banner2.1fe756dd.png","1fe756dd7d0029a030f443c6d5dbb5a8"],["/static/media/echarts.1d8a8985.png","1d8a89859bceef677bf8c81953e90adc"],["/static/media/icon_change.232a1061.png","232a1061304824614208808055d156b5"],["/static/media/icon_customer.647b1fc2.png","647b1fc2c44bdc0c2d76c2222fe5dbd6"],["/static/media/icon_diamond.1d76611e.svg","1d76611eeeb4fdd0c947433a5404ab54"],["/static/media/icon_exchange.424b32ad.png","424b32adcde98872850315f2e4a11784"],["/static/media/icon_live.e02e2912.png","e02e2912c0025570835d01082e613307"],["/static/media/icon_message.d966c4ce.png","d966c4ce060251df1afe413018f1be01"],["/static/media/icon_rmb.48765b26.png","48765b26e49773eb61e9b65aa8ba50ea"],["/static/media/icon_scan.a399c758.png","a399c758cdca843af6dfed0790838d7f"],["/static/media/icon_setting.1e9a228c.png","1e9a228c244f01536e24aec0dd4f06c6"],["/static/media/icon_shop.e7bb9355.png","e7bb9355c0e1361fa130c158e9a0c2a8"],["/static/media/icon_team.88f5c96e.png","88f5c96e89567dfc50b26d00d0cd5638"],["/static/media/icon_wallet.397bb9f3.png","397bb9f31967041e972fef3c84fab619"],["/static/media/loginbg.947fe4e0.png","947fe4e0f27750b7cb699715632e66ba"],["/static/media/my_bg.3f449a6e.png","3f449a6ee8600047641dfed7a86a44b3"],["/static/media/property_top_bg.4d09dcad.png","4d09dcad6105eeafadbde36981218d72"]],cacheName="sw-precache-v3-sw-precache-webpack-plugin-"+(self.registration?self.registration.scope:""),ignoreUrlParametersMatching=[/^utm_/],addDirectoryIndex=function(e,t){var a=new URL(e);return"/"===a.pathname.slice(-1)&&(a.pathname+=t),a.toString()},cleanResponse=function(t){return t.redirected?("body"in t?Promise.resolve(t.body):t.blob()).then(function(e){return new Response(e,{headers:t.headers,status:t.status,statusText:t.statusText})}):Promise.resolve(t)},createCacheKey=function(e,t,a,n){var c=new URL(e);return n&&c.pathname.match(n)||(c.search+=(c.search?"&":"")+encodeURIComponent(t)+"="+encodeURIComponent(a)),c.toString()},isPathWhitelisted=function(e,t){if(0===e.length)return!0;var a=new URL(t).pathname;return e.some(function(e){return a.match(e)})},stripIgnoredUrlParameters=function(e,a){var t=new URL(e);return t.hash="",t.search=t.search.slice(1).split("&").map(function(e){return e.split("=")}).filter(function(t){return a.every(function(e){return!e.test(t[0])})}).map(function(e){return e.join("=")}).join("&"),t.toString()},hashParamName="_sw-precache",urlsToCacheKeys=new Map(precacheConfig.map(function(e){var t=e[0],a=e[1],n=new URL(t,self.location),c=createCacheKey(n,hashParamName,a,/\.\w{8}\./);return[n.toString(),c]}));function setOfCachedUrls(e){return e.keys().then(function(e){return e.map(function(e){return e.url})}).then(function(e){return new Set(e)})}self.addEventListener("install",function(e){e.waitUntil(caches.open(cacheName).then(function(n){return setOfCachedUrls(n).then(function(a){return Promise.all(Array.from(urlsToCacheKeys.values()).map(function(t){if(!a.has(t)){var e=new Request(t,{credentials:"same-origin"});return fetch(e).then(function(e){if(!e.ok)throw new Error("Request for "+t+" returned a response with status "+e.status);return cleanResponse(e).then(function(e){return n.put(t,e)})})}}))})}).then(function(){return self.skipWaiting()}))}),self.addEventListener("activate",function(e){var a=new Set(urlsToCacheKeys.values());e.waitUntil(caches.open(cacheName).then(function(t){return t.keys().then(function(e){return Promise.all(e.map(function(e){if(!a.has(e.url))return t.delete(e)}))})}).then(function(){return self.clients.claim()}))}),self.addEventListener("fetch",function(t){if("GET"===t.request.method){var e,a=stripIgnoredUrlParameters(t.request.url,ignoreUrlParametersMatching),n="index.html";(e=urlsToCacheKeys.has(a))||(a=addDirectoryIndex(a,n),e=urlsToCacheKeys.has(a));var c="/index.html";!e&&"navigate"===t.request.mode&&isPathWhitelisted(["^(?!\\/__).*"],t.request.url)&&(a=new URL(c,self.location).toString(),e=urlsToCacheKeys.has(a)),e&&t.respondWith(caches.open(cacheName).then(function(e){return e.match(urlsToCacheKeys.get(a)).then(function(e){if(e)return e;throw Error("The cached response that was expected is missing.")})}).catch(function(e){return console.warn('Couldn\'t serve response for "%s" from cache: %O',t.request.url,e),fetch(t.request)}))}});